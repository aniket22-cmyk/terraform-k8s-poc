# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: dummy-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: dummy-app
#   template:
#     metadata:
#       labels:
#         app: dummy-app
#     spec:
#       containers:
#       - name: dummy-app
#         image: python:3.9-slim
#         command: ["/bin/sh"]
#         args: ["-c", "python3 /app/app.py"]
#         ports:
#         - containerPort: 8000
#         volumeMounts:
#         - name: app-code
#           mountPath: /app
#       volumes:
#       - name: app-code
#         hostPath:
#           path: /home/ubuntu/app
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dummy-app-service
# spec:
#   type: NodePort
#   ports:
#   - port: 8000
#     targetPort: 8000
#     nodePort: 30001
#   selector:
#     app: dummy-app

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dummy-app
  template:
    metadata:
      labels:
        app: dummy-app
    spec:
      containers:
      - name: dummy-app
        image: python:3.9-slim
        command: ["/bin/sh"]
        args: 
          - "-c"
          - |
            cat > /app/app.py << 'PYEOF'
            from http.server import HTTPServer, SimpleHTTPRequestHandler
            import os

            class MyHandler(SimpleHTTPRequestHandler):
                def do_GET(self):
                    self.send_response(200)
                    self.send_header("Content-type", "text/html")
                    self.end_headers()
                    self.wfile.write(b"<h1>Hello from Kubernetes on EC2! (PoC)</h1>")

            if __name__ == "__main__":
                port = int(os.environ.get("PORT", 8000))
                server = HTTPServer(("0.0.0.0", port), MyHandler)
                print(f"Server running on port {port}")
                server.serve_forever()
            PYEOF
            python3 /app/app.py
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
---
apiVersion: v1
kind: Service
metadata:
  name: dummy-app-service
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 30001
  selector:
    app: dummy-app